const { createApp } = Vue;createApp({  delimiters: ['${', '}$'],  mixins: [window.mix ? window.mix : {}],  methods: {    postData(url, payload, config) {      return axios.post(url, payload, config ? config : {})        .then(response => {          return response.data ? response.data : (response.json ? response.json() : null);        })        .catch(() => {          console.warn('Метод ' + url + ' не реализован');          throw new Error('no "post" method');        });    },    getData(url, payload) {      return axios.get(url, { params: payload })        .then(response => {         //console.log('Получен ответ:', response);          return response.data ? response.data : (response.json ? response.json() : null);        })        .catch(error => {        //console.error('Ошибка при выполнении запроса:', error);          console.warn('Метод ' + url + ' не реализован');          throw new Error('no "get" method');        });    },    getCategories() {      this.getData('/api/rates/')        .then(data => {          this.rates = data;        })        .catch(() => {          console.warn('Ошибка получения');          this.rates = [];        });    },      getCookie(name) {      // Получение значения куки по имени      let cookieValue = null;      if (document.cookie && document.cookie !== '') {        const cookies = document.cookie.split(';');        for (let i = 0; i < cookies.length; i++) {          const cookie = cookies[i].trim();          // Does this cookie string begin with the name we want?          if (cookie.substring(0, name.length + 1) === name + '=') {            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));            break;          }        }      }      return cookieValue;    },  },  mounted() {    this.getRates();  },  computed: {  data() {    return {      filters: {        price: {          minValue: 1,          maxValue: 10000,          currentFromValue: 1,          currentToValue: 6000        }      },      sortRules: [        { id: 'card_title', title: 'Тарифному плану' },        { id: 'price_main', title: 'Цене' },      ],    };  },}}).mount('#site');